// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ROCconvexhull
List ROCconvexhull(NumericVector scores, IntegerVector classes);
RcppExport SEXP _proftree_ROCconvexhull(SEXP scoresSEXP, SEXP classesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type classes(classesSEXP);
    rcpp_result_gen = Rcpp::wrap(ROCconvexhull(scores, classes));
    return rcpp_result_gen;
END_RCPP
}
// empChurnCpp
double empChurnCpp(NumericVector scores, IntegerVector classes, double alpha, double beta, double clv, double d, double f);
RcppExport SEXP _proftree_empChurnCpp(SEXP scoresSEXP, SEXP classesSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP clvSEXP, SEXP dSEXP, SEXP fSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type classes(classesSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type clv(clvSEXP);
    Rcpp::traits::input_parameter< double >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type f(fSEXP);
    rcpp_result_gen = Rcpp::wrap(empChurnCpp(scores, classes, alpha, beta, clv, d, f));
    return rcpp_result_gen;
END_RCPP
}
